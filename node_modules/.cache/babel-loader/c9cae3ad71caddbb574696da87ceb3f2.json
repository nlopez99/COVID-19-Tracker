{"ast":null,"code":"var _jsxFileName = \"/home/trident/js/corona/src/components/Chart/Chart.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport styles from './Chart.module.css';\nimport { Line, Bar } from 'react-chartjs-2';\n\nconst Chart = () => {\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    console.log(dailyData);\n    fetchAPI();\n  });\n  const lineChart = dailyData.length ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        labels: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        labels: 'Infected',\n        borderColor: '#3333ff',\n        backgroundColor: 'rgba(255, 0, 0, 0.5)',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"lineChart\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Chart;","map":{"version":3,"sources":["/home/trident/js/corona/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","styles","Line","Bar","Chart","dailyData","setDailyData","fetchAPI","console","log","lineChart","length","labels","map","date","datasets","data","confirmed","borderColor","fill","deaths","backgroundColor","container"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAChB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMQ,QAAQ,GAAG,YAAY;AACzBD,MAAAA,YAAY,CAAC,MAAMN,cAAc,EAArB,CAAZ;AACH,KAFD;;AAIAQ,IAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AAEAE,IAAAA,QAAQ;AACX,GARQ,CAAT;AAUA,QAAMG,SAAS,GACXL,SAAS,CAACM,MAAV,gBAEI,oBAAC,IAAD;AACA,IAAA,IAAI,EAAE;AACFC,MAAAA,MAAM,EAAEP,SAAS,CAACQ,GAAV,CAAc,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAcA,IAA5B,CADN;AAEFC,MAAAA,QAAQ,EAAE,CAAC;AACPC,QAAAA,IAAI,EAAEX,SAAS,CAACQ,GAAV,CAAc,CAAC;AAAEI,UAAAA;AAAF,SAAD,KAAmBA,SAAjC,CADC;AAEPL,QAAAA,MAAM,EAAE,UAFD;AAGPM,QAAAA,WAAW,EAAE,SAHN;AAIPC,QAAAA,IAAI,EAAE;AAJC,OAAD,EAKP;AACCH,QAAAA,IAAI,EAAEX,SAAS,CAACQ,GAAV,CAAc,CAAC;AAAEO,UAAAA;AAAF,SAAD,KAAgBA,MAA9B,CADP;AAECR,QAAAA,MAAM,EAAE,UAFT;AAGCM,QAAAA,WAAW,EAAE,SAHd;AAICG,QAAAA,eAAe,EAAE,sBAJlB;AAKCF,QAAAA,IAAI,EAAE;AALP,OALO;AAFR,KADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,GAkBU,IAnBd;AAsBA,sBACA;AAAK,IAAA,SAAS,EAAElB,MAAM,CAACqB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADA;AAKH,CAzCD;;AA4CA,eAAelB,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport styles from './Chart.module.css';\nimport { Line, Bar } from 'react-chartjs-2';\n\nconst Chart = () => {\n    const [dailyData, setDailyData] = useState([]);\n \n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData());\n        }\n\n        console.log(dailyData)\n\n        fetchAPI();\n    });\n\n    const lineChart = (\n        dailyData.length\n        ? (\n            <Line \n            data={{\n                labels: dailyData.map(({ date }) => date), \n                datasets: [{\n                    data: dailyData.map(({ confirmed }) => confirmed),\n                    labels: 'Infected',\n                    borderColor: '#3333ff',\n                    fill: true,\n                }, {\n                    data: dailyData.map(({ deaths }) => deaths),\n                    labels: 'Infected',\n                    borderColor: '#3333ff',\n                    backgroundColor: 'rgba(255, 0, 0, 0.5)',\n                    fill: true,\n                }],\n            }}\n            />) : null\n    );\n\n    return (\n    <div className={styles.container}>\n        <lineChart />\n    </div>\n    )\n}\n\n\nexport default Chart;"]},"metadata":{},"sourceType":"module"}